type Bond @entity {
  """ ID transaction hash """
  id: ID!
  owner: Bytes!
  amount: BigInt!
  poolId: Bytes!
  nonce: BigInt!
  slashedAtStart: BigInt!
  timestamp: Int!
}

type Slash @entity {
  """ ID transaction hash """
  id: ID!
  poolId: Bytes!
  newSlashPts: BigInt!
  timestamp: Int!
}

type UnbondRequest @entity {
  """ ID transaction hash """
  id: ID!
  owner: Bytes!
  bondId: Bytes!
  willUnlock: BigInt!
  timestamp: Int!
}

type Unbonded @entity {
  """ ID transaction hash """
  id: ID!
  owner: Bytes!
  bondId: Bytes!
  timestamp: Int!
}

type Channel @entity {
  """channel id"""
  id: ID!
  creator: Bytes!
  tokenAddr: Bytes!
  tokenAmount: BigInt!
  validUntil: BigInt!
  validators: [Bytes!]
  spec: Bytes!
  created: Int!
  withdraw: [ChannelWithdraw!]! @derivedFrom(field: "channel")
  withdrawExpired: [ChannelWithdrawExpired!]! @derivedFrom(field: "channel")
}

type ChannelOpen @entity {
  """" channel id """
  id: ID!
}

type ChannelWithdrawExpired @entity {
  """" transaction hash """
  id: ID!
  channel: Channel!
  amount: BigInt!
  timestamp: Int!
}

type ChannelWithdraw @entity {
  """" transaction hash """
  id: ID!
  channel: Channel!
  amount: BigInt!
  timestamp: Int!
}

type Identity @entity {
  """ id """
  id: ID!
  timestamp: Int!
}
